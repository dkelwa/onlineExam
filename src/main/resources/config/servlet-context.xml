<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"

	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<!-- Declare a view resolver -->
	<!-- Take note of the order. Since we're using TilesViewResolver as well 
		We need to define which ViewResolver is called first. We chose this InternalResourceViewResolver 
		to be at the bottom order -->
		
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/jsps/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	
   <!-- Initialization for data source -->
   <beans:bean id="dataSource" 
      class="org.springframework.jdbc.datasource.DriverManagerDataSource">
      <beans:property name="driverClassName" value="com.mysql.jdbc.Driver"/>
      <beans:property name="url" value="jdbc:mysql://localhost:3306/test"/>
      <beans:property name="username" value="root"/>
      <beans:property name="password" value="root"/>
   </beans:bean>
   
   <beans:bean id="userService"
		class="com.exam.service.impl.UserServiceImpl">
		<!-- <beans:property name="serviceUrl"
			value="${service.branch.url}" /> -->
		<!-- <beans:property name="serviceInterface"
			value="com.exam.service.UserService" /> -->
	</beans:bean>
	
	 <beans:bean id="profileService"
		class="com.exam.service.impl.ProfileServiceImpl">
		<!-- <beans:property name="serviceUrl"
			value="${service.branch.url}" /> -->
		<!-- <beans:property name="serviceInterface"
			value="com.exam.service.ProfileService" /> -->
	</beans:bean>

   <beans:bean id="userDAO" 
      class="com.exam.dao.impl.UserDAOImpl">
      <beans:property name="dataSource"  ref="dataSource" />    
   </beans:bean>
   
   <beans:bean id="profileDAO" 
      class="com.exam.dao.impl.ProfileDAOImpl">
      <beans:property name="dataSource"  ref="dataSource" />    
   </beans:bean>
	

	<context:annotation-config />
	<context:component-scan base-package="com.exam.controller" /><!-- 
		Need to check -->

	<mvc:annotation-driven />

	
</beans:beans>
